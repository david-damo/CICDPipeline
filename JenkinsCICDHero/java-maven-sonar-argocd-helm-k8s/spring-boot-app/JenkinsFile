pipeline {
  agent {
    docker {
      image 'abhishekf5/maven-abhishek-docker-agent:v1'
      //image 'sanjeevjha77/cicd-demo-sanjeev:v2'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'echo Build and Test passed'
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd JenkinsCICDHero/java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://192.168.1.3:9000"
      }
      steps {
      sh 'echo Static Code Analysis passed'
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd JenkinsCICDHero/java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image - sanjeev') {
      environment {
        //DOCKER_IMAGE = "abhishekf5/ultimate-cicd:${BUILD_NUMBER}"
        DOCKER_IMAGE = "sanjeevjha77/cicd-demo-sanjeev:${BUILD_NUMBER}"
        DOCKERFILE_LOCATION = "JenkinsCICDHero/java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
//cleanup current user docker credentials
        //sh 'rm  ~/.dockercfg || true'
        //sh 'rm ~/.docker/config.json || true'
            sh 'echo ********Starts docker tag creation*****'
            sh 'cd JenkinsCICDHero/java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
            sh 'echo ********Docker tag created*****'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            sh 'echo Build and Push Docker Image passed - 3'
            sudo docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            //sudo docker tag docker.image("${DOCKER_IMAGE}")
            sh 'echo Build and Push Docker Image passed - 4'
            dockerImage.push()
            sh 'echo Build and Push Docker Image passed - 5'
            }
        }
      }
    }
    stage('Update Deployment File') {
        steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/iam-veeramalla/Jenkins-Zero-To-Hero.git'
      }
  }
}
